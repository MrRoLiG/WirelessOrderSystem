package com.amaker.wlo;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;

import com.amaker.provider.User;
import com.amaker.util.UploadUtil;
import com.google.gson.Gson;

import android.app.Activity;
import android.content.ContentResolver;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class UploadPictrueActivity extends Activity{
	
	private static final int SELECT_PHOTO=102;
	private static final int TAKE_PHOTO=202;
	
	private Button select,take,download;
	private TextView tips;
	private String imageFilePath;
	private ImageView iamgeView;
	private String str="";
	private String path="";
	private String tipsStr="";
	
	private URL getPicURL=null;
	private Bitmap picBitmap=null;
	private Intent intent=null;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_upload_pictrue);
		tips=(TextView)findViewById(R.id.upload_TextView);
		
		iamgeView=(ImageView)findViewById(R.id.upload_imageView);
		tips=(TextView)findViewById(R.id.upload_TextView);
		
		select=(Button)findViewById(R.id.upload_select_btn);
		select.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// 相册选取
				intent = new Intent(Intent.ACTION_GET_CONTENT);
				intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, "image/*");
				startActivityForResult(intent, SELECT_PHOTO);
			}
			
		});
		
		take=(Button)findViewById(R.id.upload_take_btn);
		take.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// 拍照
				//设置图片的保存路径,作为全局变量
				Date date=new Date(System.currentTimeMillis());
				SimpleDateFormat dateFormat=new SimpleDateFormat("'IMG'_yyyyMMddHHmmss");
				String timeStr=dateFormat.format(date);
				//imageFilePath = Environment.getExternalStorageDirectory().getPath()+"/DCIM/Camera/"+timeStr+".jpg";
				imageFilePath = Environment.getExternalStorageDirectory().getAbsolutePath()+"//"timeStr+".jpg";
				File temp = new File(imageFilePath);		
				Uri imageFileUri = Uri.fromFile(temp);//获取文件的Uri	
				intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);//跳转到相机Activity
				//intent.putExtra(android.provider.MediaStore.EXTRA_OUTPUT, imageFileUri);//告诉相机拍摄完毕输出图片到指定的Uri
				startActivityForResult(intent, TAKE_PHOTO);
			}
			
		});
		
		download=(Button)findViewById(R.id.upload_download_btn);
		download.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				//从服务器下载图片
				Thread thread=new Thread(new Runnable() {

					@Override
					public void run() {
						String url="http://10.0.3.2:8080/Wireless_Order_Server/uploads/687f0d8d272f6237d795fda538ea0a8d.jpg";
						try {
							getPicURL=new URL(url);
						}
						catch(MalformedURLException e)
						{
							e.printStackTrace();
						}
						try {
							HttpURLConnection conn=(HttpURLConnection) getPicURL.openConnection();
							conn.setDoInput(true);
							conn.connect();
							InputStream is=conn.getInputStream();
							picBitmap = BitmapFactory.decodeStream(is);
							is.close();
							
							Message msg=new Message();
							Bundle data=new Bundle();
							data.putString("value", "success");
							msg.setData(data);
							picHandler.sendMessage(msg);
						}
						catch(IOException e)
						{
							e.printStackTrace();
						}
						
					}});
				thread.start();
				try {
					thread.join();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
		});
	}
	
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {

		if(requestCode==SELECT_PHOTO)
		{
			if(data!=null&&resultCode!=0)
			{
				Bitmap bm = null;
				 // 外界的程序访问ContentProvider所提供数据 可以通过ContentResolver接口
				 ContentResolver resolver = getContentResolver();

				 try {
					Uri originalUri = data.getData(); // 获得图片的uri

					bm = MediaStore.Images.Media.getBitmap(resolver, originalUri); // 显得到bitmap图片

					// 这里开始的第二部分，获取图片的路径：

					String[] proj = { MediaStore.Images.Media.DATA };

					// 好像是android多媒体数据库的封装接口，具体的看Android文档
					@SuppressWarnings("deprecation")
					Cursor cursor = managedQuery(originalUri, proj, null, null, null);
					if(cursor!=null)
					{
						// 按我个人理解 这个是获得用户选择的图片的索引值
						int column_index = cursor.getColumnIndexOrThrow(proj[0]);
						// 将光标移至开头 ，这个很重要，不小心很容易引起越界
						cursor.moveToFirst();
						// 最后根据索引值获取图片路径
						path = cursor.getString(column_index);
						//cursor.close();
					}
					else {
						path=originalUri.getPath();
					}
					
					//iamgeView.setImageURI(originalUri);
					str=path;
					
					Thread thread=new Thread(new Runnable() {

						@Override
						public void run() {
							// TODO Auto-generated method stub
							File file=new File(str);
							//模拟机
							tipsStr=UploadUtil.uploadFile(file, "http://10.0.3.2:8080/Wireless_Order_Server/servlet/UploadServlet?requestStr=upload");
							//实机测试
							//temp=UploadUtil.uploadFile(file, "http://192.168.191.1:8080/Wireless_Order_Server/servlet/UploadServlet?upload=true");
							
							String temp=tipsStr;
							System.out.print(temp);
							
							Message msg = new Message();
					        Bundle data = new Bundle();
					        data.putString("value", temp);
					        msg.setData(data);
					        handler.sendMessage(msg);
						}
						
					});
					thread.start();
					try {
						thread.join();
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
					
				 } catch (IOException e) {
					e.printStackTrace();
				 }
			}
		}
		
		if(requestCode==TAKE_PHOTO) {
			if(data!=null&&resultCode!=0&&data.hasExtra("data")) {
				Bitmap bmp = BitmapFactory.decodeFile(imageFilePath);
				str=imageFilePath;
				iamgeView.setImageBitmap(bmp);
				Thread thread=new Thread(new Runnable() {

					@Override
					public void run() {
						// TODO Auto-generated method stub
						File file=new File(str);
						//模拟机
						tipsStr=UploadUtil.uploadFile(file, "http://10.0.3.2:8080/Wireless_Order_Server/servlet/UploadServlet?requestStr=upload");
						//实机测试
						//temp=UploadUtil.uploadFile(file, "http://192.168.191.1:8080/Wireless_Order_Server/servlet/UploadServlet?upload=true");
						
						String temp=tipsStr;
						System.out.print(temp);
						
						Message msg = new Message();
				        Bundle data = new Bundle();
				        data.putString("value", temp);
				        msg.setData(data);
				        handler.sendMessage(msg);
					}
					
				});
				thread.start();
				try {
					thread.join();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
		
		super.onActivityResult(requestCode,resultCode,data);
	}
	
	Handler handler=new Handler() {
		@Override
	    public void handleMessage(Message msg) {
	        super.handleMessage(msg);
	        Bundle data = msg.getData();
	        String val = data.getString("value");
	        
	        tips.setText(val);
		}
	};
	
	Handler picHandler=new Handler() {
		@Override
	    public void handleMessage(Message msg) {
	        super.handleMessage(msg);
	        Bundle data = msg.getData();
	        String val = data.getString("value");
	        
	        iamgeView.setImageBitmap(picBitmap);
		}
	};
}